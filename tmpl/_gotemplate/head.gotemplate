// Code generated {{.GenDate}} by carto.  DO NOT EDIT.
package {{.PackageName}}
import (
{{if or .ByReference .LazyInstantiates}}\\\
	"sync"
{{end}}\\\
{{if .KeyTypePackage}}\\\
	"{{.KeyTypePackage}}"
{{end}}\\\
{{if .ValueTypePackage}}\\\
	"{{.ValueTypePackage}}"
{{end}}\\\
)

// {{.StructName}} wraps map[{{.KeyType}}]{{.ValueType}}{{if .ByReference}}, and locks reads and writes with a mutex{{end}}
type {{.StructName}} struct {
{{if .ByReference}}\\\
	mx sync.RWMutex
{{end}}\\\
	{{.InternalMapName}} map[{{.KeyType}}]{{.ValueType}}
{{if .LazyInstantiates}}\\\
	onceToken sync.Once
{{end}}
}
{{if .LazyInstantiates}}{{else}}\\\

// New{{.StructName}} generates a new {{.StructName}} with a non-nil map
func New{{.StructName}}() {{if .ByReference}}*{{end}}{{.StructName}} {
	{{.ReceiverName}} := {{if .ByReference}}&{{end}}{{.StructName}}{}
	{{.ReceiverName}}.{{.InternalMapName}} = make(map[{{.KeyType}}]{{.ValueType}})

	return {{.ReceiverName}}
}
{{end}}\\\
